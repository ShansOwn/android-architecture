apply plugin: 'com.android.application'
apply plugin: 'me.tatarka.retrolambda'
apply plugin: 'com.neenbedankt.android-apt'

// Manifest version information!
def versionMajor = 0
def versionMinor = 0
def versionPatch = 1
def versionBuild = 1 // bump for dogfood builds, public betas, etc.

android {
  compileSdkVersion 22
  buildToolsVersion "22.0.1"

  signingConfigs {
    AndroidArchitecture {
      storeFile file(project.storeFile)
      storePassword project.storePass
      keyAlias project.keyAlias
      keyPassword project.keyPass
    }
  }

  defaultConfig {
    minSdkVersion 17
    targetSdkVersion 22
    versionCode versionMajor * 10000 + versionMinor * 1000 + versionPatch * 100 + versionBuild
    versionName "${versionMajor}.${versionMinor}.${versionPatch}"
    signingConfig signingConfigs.AndroidArchitecture
  }

  compileOptions {
    sourceCompatibility JavaVersion.VERSION_1_8
    targetCompatibility JavaVersion.VERSION_1_8
  }

  lintOptions {
    abortOnError = true
    textReport true
    textOutput 'stdout'
    lintConfig file("src/main/lint.xml")
  }

  buildTypes {
    debug {
      applicationIdSuffix '.debug'
    }
    release {
      minifyEnabled false
      proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
    }
  }

  productFlavors {
    internal {
      applicationId 'com.shansown.androidarchitecture.internal'
    }
    production {
      applicationId 'com.shansown.androidarchitecture'
    }
  }
}

// TODO remove eventually: http://b.android.com/162285
configurations {
  internalDebugCompile
}

dependencies {
  compile fileTree(dir: 'libs', include: ['*.jar'])
  compile 'com.android.support:appcompat-v7:22.1.1'

  compile 'com.google.dagger:dagger:2.0'
  apt 'com.google.dagger:dagger-compiler:2.0'
  provided 'javax.annotation:jsr250-api:1.0'

  compile 'com.squareup.okhttp:okhttp:2.3.0'
  compile 'com.squareup.picasso:picasso:2.5.2'
  compile 'com.squareup.retrofit:retrofit:1.9.0'
  internalDebugCompile 'com.squareup.retrofit:retrofit-mock:1.9.0'

  compile 'com.jakewharton:butterknife:6.1.0'
  compile 'com.jakewharton.byteunits:byteunits:0.9.0'
  compile 'com.jakewharton.timber:timber:3.1.0'
  internalDebugCompile 'com.jakewharton.madge:madge:1.1.1'
  internalDebugCompile 'com.jakewharton.scalpel:scalpel:1.1.1'

  internalCompile 'com.squareup.leakcanary:leakcanary-android:1.3'
  productionCompile 'com.squareup.leakcanary:leakcanary-android-no-op:1.3'
  internalCompile 'com.mattprecious.telescope:telescope:1.4.0@aar'

  compile 'io.reactivex:rxjava:1.0.10'
  compile 'io.reactivex:rxandroid:0.24.0'

  compile 'de.greenrobot:eventbus:2.4.0'

  apt 'org.projectlombok:lombok:1.16.4'
  provided 'org.projectlombok:lombok:1.16.4'

  compile 'net.danlew:android.joda:2.7.2'
}

def installAll = tasks.create('installAll')
installAll.description = 'Install all applications.'
android.applicationVariants.all { variant ->
  installAll.dependsOn(variant.install)
  // Ensure we end up in the same group as the other install tasks.
  installAll.group = variant.install.group
}